clear functions

r = reaction({... % define reactions
'1.0*A (C1:a C2:b C3:c) -> 1.0*B (C1:a C2:b C3:c) ';...
'1.0*B (C1:a C2:b C3:c) -> 1.0*D (C1:a C2:b C3:c) ';...
'1.0*B (C1:a C2:b C3:c) -> 1.0*C (C1:b C2:c) + 1.0*E (C1:a) ';...
'1.0*B (C1:a C2:b C3:c) + 1.0*C (C1:d C2:e) -> 1.0*D (C1:b C2:c C3:d) + 1.0*E (C1:a) + 1.0*E (C1:e) ';...
'1.0*D (C1:a C2:b C3:c) -> 1.0*F (C1:a C2:b C3:c) ';...
});

m = model(r); % set up model

% take care of symmetrical metabolites

% define unbalanced reactions

% define lower bounds
m.rates.flx.lb = [...
99,...
0,...
0,...
0,...
0,...
];

%define upper bounds
m.rates.flx.ub = [...
101,...
1000,...
1000,...
1000,...
1000,...
];

% define flux vals
m.rates.flx.val = [...
100,...
0,...
0,...
0,...
0,...
];

% include/exclude reactions
m.rates.on = [...
true,...
true,...
true,...
true,...
true,...
];

% define reaction ids
m.rates.id = {...
'R1',...
'R2',...
'R3',...
'R4',...
'R5',...
};

m.rates.flx.val = mod2stoich(m); % make sure the fluxes are feasible
m.options.fit_starts = 10; % 10 restarts during the estimation procedure

% define which fragments of molecules were measured in which experiment
d = msdata({...
'F1: F @ C1 C2 C3';
});

% initialize mass distribution vector
d.idvs = idv;

% define tracers used in the experiments
t = tracer({...
'[1-13C]A: A.EX @ C1';...
});

% define fractions of tracers used
t.frac = [ 1 ];

% define experiments for fit data
f = data(' R1 ');

% add fit values
f.val = [...
100,...
];
% add fit stds
f.std = [...
0.0001,...
];

% initialize experiment with t and add f and d
x = experiment(t);
x.data_flx = f;
x.data_ms = d;

% assing all the previous values to a specific experiment
m.expts(1) = x;

m.expts(1).id = {'exp1'};

% add unlabelled atoms
d.more = {...
'C7H12Si',...
};

% add experimental data for annotated fragments
m.expts(1).data_ms(1).idvs.id(1,1) = {'F1_0_0_exp1'};
m.expts(1).data_ms(1).idvs.time(1,1) = 0;
m.expts(1).data_ms(1).idvs.val(1,1) = 0.000100;
m.expts(1).data_ms(1).idvs.std(1,1) = 0.001;
m.expts(1).data_ms(1).idvs.val(2,1) = 0.800800;
m.expts(1).data_ms(1).idvs.std(2,1) = 0.002402;
m.expts(1).data_ms(1).idvs.val(3,1) = 0.198300;
m.expts(1).data_ms(1).idvs.std(3,1) = 0.001;
m.expts(1).data_ms(1).idvs.val(4,1) = 0.000900;
m.expts(1).data_ms(1).idvs.std(4,1) = 0.001;
